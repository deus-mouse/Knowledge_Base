'''
multiprocessing.Queue — очереди совместных заданий

Такая реализация очереди совместных заданий позволяет выполнять па-
раллельную обработку находящихся в очереди элементов многочисленны-
ми параллельными рабочими процессами1. Процессно-ориентированное
распараллеливание популярно в Python из-за глобальной блокировки
интерпретатора (GIL), которая препятствует некоторым формам парал-
лельного исполнения в единственном процессе интерпретатора.

В качестве специализированной реализации очереди, предназначенной
для обмена данными между процессами, очередь multiprocessing.Queue
упрощает распределение работы по многочисленным процессам с целью
преодоления ограничений GIL. Этот тип очереди может хранить и пере-
давать любой консервируемый (модулем pickle) объект через границы
процессов.
'''

from multiprocessing import Queue


q = Queue()
q.put('есть')
q.put('спать')
q.put('программировать')

print(q)
# <multiprocessing.queues.Queue object at 0x1081c12b0>

q.get()
# 'есть'

q.get()
# 'спать'

q.get()
# 'программировать'

q.get()
# Блокирует / ожидает бесконечно...